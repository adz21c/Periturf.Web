name: CI

on:
  push:
    branches:
      - 'master'
      - 'develop'
    paths:
      - 'src/**'
  pull_request:

env:
  PACKAGE_PATH: ${{ github.workspace }}\artifacts\packages

jobs:
  build:
    name: Build
    
    outputs:
      gitversion_informationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}
      gitversion_fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
      gitversion_preReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}

    runs-on: windows-latest
    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.x'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0    # Git version requires complete history and sonarcloud for a better relevancy of analysis

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"adz21c_Periturf.Web" /o:"adz21c-github" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /v:"${{ steps.gitversion.outputs.fullSemVer }}" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
          dotnet build src -c Release -p:Version="${{ steps.gitversion.outputs.FullSemVer }}" -p:Version="${{ steps.gitversion.outputs.fullSemVer }}" -p:InformationalVersion="${{ steps.gitversion.outputs.informationalVersion }}" 
          dotnet test .\src\Periturf.Web.Tests --collect:"XPlat Code Coverage" --settings:.\src\CodeCoverage.runsettings --no-restore --no-build -c Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
      - name: Package
        run: dotnet pack src --no-restore --no-build --include-symbols -p:SymbolPackageFormat=snupkg  -c Release -p:Version="${{ steps.gitversion.outputs.fullSemVer }}" -o "${{ env.PACKAGE_PATH }}"

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ${{ env.PACKAGE_PATH }}\**
          retention-days: 5

  release_github:
    name: Create Github Release

    needs: [build]
    if: ${{ success() && github.event_name == 'push' }}

    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
         
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: ${{ env.PACKAGE_PATH }}

      - name: Create Git Release Tag v${{ needs.build.outputs.gitversion_fullSemVer }}
        run: |
          git tag v${{ needs.build.outputs.gitversion_fullSemVer }}
          git push origin v${{ needs.build.outputs.gitversion_fullSemVer }}

      - name: Create Github Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          name: ${{ needs.build.outputs.gitversion_informationalVersion }}
          files: ${{ env.PACKAGE_PATH }}\*
          tag_name: v${{ needs.build.outputs.gitversion_fullSemVer }}
          prerelease: ${{ needs.build.outputs.gitversion_preReleaseLabel != '' }}

  release_nuget:
    name: Push Release to Nuget

    needs: [build]
    if: ${{ success() && github.event_name == 'push' }}

    runs-on: windows-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: ${{ env.PACKAGE_PATH }}

      - name: Push to NuGet
        run: dotnet nuget push "${{ env.PACKAGE_PATH }}\*" --api-key "${{ secrets.NUGET_APIKEY }}" -s "https://api.nuget.org/v3/index.json"

